int n<-5+2+3;
int j<-2*8-3;

int n<-5+2+3,n2<-5+1,n3;
int j<-2*8-3;
int n<-(1+2)*(3-4);
int n<-1+2+3+4+5+6,j<-f+2;

int n<-5+1+2+3;
n<-5+8;
boolean n<- 5+8>3 AND 1+2<4;

ARRAY int[1][2][3] id;
ARRAY int[1+2+3][5*3] id;
boolean n<- 5+8>3 AND TRUE;
boolean n<-TRUE AND TRUE;
boolean n<-TRUE OR FALSE ;
boolean n<-TRUE OR FALSE OR TRUE OR TRUE ;
boolean n<-TRUE AND FALSE OR TRUE ;
boolean n<-TRUE AND FALSE OR TRUE ;
boolean n<-TRUE AND FALSE OR TRUE AND TRUE;

/*****************************************************************

boolean n<-TRUE AND TRUE;
int x;
int y;
int a;
boolean id1;
float f1, f2, f3;



%%%
MAIN() [

]


****************************************************Codigo jony************************
int x;
int y;
int a;
boolean id1;
float f1, f2, f3;

int suma(int mm, int mmm) [
     int resultado <- a + a;
%%%
     return resultado;
]

%%%
MAIN() [
  x<-6;
  y<-1;
  WHILE(x>0) [
     y<-y*x;
     x<-x-1;
  ]
  PRINTLN["El factorial de 6 es : ",y];
  PRINT["\n"];
  PRINTLN["El valor de x+1 es : ",x+1];

  IF(a==1) [
     y<-12;
  ] ELSE [
     f1<-13.2f;
  ]
  int suma <-9;
  PRINTLN[suma];
]
********************************************While mas de una instruccion*************************************************
int x;
int y;
int a;
boolean id1;
float f1, f2, f3;

int suma(int mm, int mmm) [
     int resultado <- a + a;
%%%
     return resultado;
]

%%%
MAIN() [
  x<-6;
  y<-1;
  WHILE(x>0) [
     y<-y*x;
     x<-x-1;
  ]
]
//******************DoWhile mas de una instruccion****************************
int x;
int y;
int a;
boolean id1;
float f1, f2, f3;

int suma(int mm, int mmm) [
     int resultado <- a + a;
%%%
     return resultado;
]

%%%
MAIN() [
  x<-6;
  y<-1;
  DO [
  y<-y*x;
  x<-x-1;
] WHILE(x>0)

]

//******************Do While solo una instruccion****************************
int x;
int y;
int a;
boolean id1;
float f1, f2, f3;

int suma(int mm, int mmm) [
     int resultado <- a + a;
%%%
     return resultado;
]

%%%
MAIN() [
  x<-6;
  y<-1;
  DO
  y<-y*x;
 WHILE(x>0)

]
********************************************For*****************************
int x;
int y;
int a;
boolean id1;
float f1, f2, f3;

int suma(int mm, int mmm) [
     int resultado <- a + a;
%%%
     return resultado;
]

%%%
MAIN() [
  x<-6;
  y<-1;
int id;
FOR(id<-0:id < 6 :+1) [
     y<-y*x;

]
]
************************************************IF****************************************
int x;
int y;
int a;
boolean id1;
float f1, f2, f3;

int suma(int mm, int mmm) [
     int resultado <- a + a;
%%%
     return resultado;
]

%%%
MAIN() [
  x<-6;
  y<-1;
IF (x>y)
     y<-y*x;

]

***********************************If ELSE****************************
int x;
int y;
int a;
boolean id1;
float f1, f2, f3;

int suma(int mm, int mmm) [
     int resultado <- a + a;
%%%
     return resultado;
]

%%%
MAIN() [
  x<-6;
  y<-1;
IF (x>y)[
     y<-y*x;
]ELSE[
   y<-8+8*3;
]
]

/*******************************************ELSIF**************************************************************

int x;
int y;
int a;
boolean id1;
float f1, f2, f3;

int suma(int mm, int mmm) [
     int resultado <- a + a;
%%%
     return resultado;
]

%%%
MAIN() [
  x<-6;
  y<-1;
IF (x>y)[
     y<-y*x;
]ELSIF(TRUE)[
   y<-1+2;
]ELSIF(FALSE)[
   y<-5+5+5;
]
]

//***********************************************************Ambitos*************************************************
int x;
string cadena<-"Hola"+x;
int y<-x+x;
int a;
boolean id1;
float f1, f2, f3;

int suma(int mm, int mmm) [
     int resultado <- a + a;
%%%
     return resultado;
]

%%%
MAIN() [
  x<-6;
  y<-1;
  WHILE(x>0) [
     y<-y*x;
     x<-x-1;
  ]
  PRINTLN["El factorial de 6 es : ",y];
  PRINT["\n"];
  PRINTLN["El valor de x+1 es : ",x+1];

  IF(a==1) [
     y<-12;
  ] ELSE [
     f1<-13.2f;
  ]
  int suma <-9;
  PRINTLN[suma];
]
